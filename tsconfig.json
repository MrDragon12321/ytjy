{
  "compilerOptions": {
    "target": "esnext", // 指定ECMAScript目标版本:“ES3”(默认)、“es5”、“ES2015”、“ES2016”、“ES2017”、“ES2018”或“ESNEXT”
    "module": "esnext", // 指定模块代码生成:“none”、“commonjs”、“amd”、“system”、“umd”、“es2015”或“ESNext”
    "strict": true, // 是否严格模式
    "jsx": "preserve", // 指定jsx代码生成:“preserve”、“response -native”或“react”
    "importHelpers": true, // 指定是否引入tslib里的复制工具函数
    "moduleResolution": "node", // 用于选择模块解析策略 node/classic
    "experimentalDecorators": true, // 用于指定是否启用实验性的装饰器特性
    "esModuleInterop": true, // 通过导入内容创建命名空间，实现CommonJS和ES模块之间的互操作性
    "skipLibCheck": true,
    "allowJs": true, // 允许编译javascript文件
    //"checkJs": true, // 报告.js文件中的错误
    //"declaration": true, // 生成对应的*.d.ts文件
    "allowSyntheticDefaultImports": true, // 用于允许从没有默认导出的模块中默认导入
    "noUnusedLocals": false, // 报告未使用局部变量的错误
    // "noUnusedParameters": true, // 报告未使用参数的错误
    "sourceMap": false, // 编译时是否生成.map文件
    //"removeComments": true, // 不向输出发出注释
    "baseUrl": ".", // 用于设置解析非相对模块名称的基本目录，相对模块不会受到baseUrl的影响
    "types": [
      "node",
      "webpack-env",
      "element-plus/global"
    ],
    "outDir": "./built", // 生成的文件存放目录
    // 用于设置模块名到基于baseUrl的路径映射
    "paths": {
      "@/*": [
        "src/*"
      ]
    },
    // 指定要包含在编译中的库文件
    "lib": [
      "esnext",
      "dom",
      "dom.iterable",
      "scripthost"
    ]
  },
  // 指定编译的文件，没有include和exclude时候用
  //"file": [],
  // 指定待编译的文件
  "include": [
    // "./src/**/*",
    "src/**/*.ts",
    "src/**/*.js",
    "src/**/*.tsx",
    "src/**/*.vue"
  ],
  // 指定排除的文件
  "exclude": [
    "node_modules"
  ]
}